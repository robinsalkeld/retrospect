#-------------------------------------------------------------------------------
# Copyright (c) 2013 Robin Salkeld
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------
ExpressionQuery.help = Evaluates a Java expression in the context of the given object or objects, using a holographic JVM.
ExpressionQuery.objects.help = The objects to evaluate the expression on.
ExpressionQuery.maxObjects.help = If set, limits the number of input objects.
ExpressionQuery.expression.help = The expression to evaluate.
ExpressionQuery.aggregate.help = If false, the expression will be evaluated once for each input object, \
producing a list of values. \n\
If true, the expression will be evaluated once with "this" \
bound to the set of input objects as a java.util.Collection, producing a single value. 
ExpressionQuery.inbound.help = When an object is expanded show all the objects pointing to this object, rather than \
all the objects that this object points to.

LoadAndRunAnalysisCodeQuery.help = Loads a class file and runs a static method on the given object or objects, using a holographic JVM.
LoadAndRunAnalysisCodeQuery.objects.help = The objects to evaluate the expression on.
LoadAndRunAnalysisCodeQuery.maxObjects.help = If set, limits the number of input objects.
LoadAndRunAnalysisCodeQuery.classFile.help = The path to the class file on disk.
LoadAndRunAnalysisCodeQuery.methodName.help = The name of the method to run.
LoadAndRunAnalysisCodeQuery.aggregate.help = If false, the expression will be evaluated once for each input object, \
producing a list of values. \n\
If true, the expression will be evaluated once with "this" \
bound to the set of input objects as a java.util.Collection, producing a single value. 
LoadAndRunAnalysisCodeQuery.inbound.help = When an object is expanded show all the objects pointing to this object, rather than \
all the objects that this object points to.

SaveObjectListQuery.help = Saves a list of objects to disk.
SaveObjectListQuery.objects.help = The objects to save.
SaveObjectListQuery.path.help = The path on disk to save to.

LoadObjectListQuery.help = Loads a list of objects from disk.
LoadObjectListQuery.path.help = The objects to load from.

CollectionValuesQuery.help = Lists the elements of a Collection using a holographic VM.
CollectionValuesQuery.collection.help = The collection object.

MapEntriesQuery.help = Lists the key-value pairs from Maps using a holographic VM.
MapEntriesQuery.objects.help = The map objects.
